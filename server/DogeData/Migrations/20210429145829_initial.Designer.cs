// <auto-generated />
using System;
using DogeWorker.DogeDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DogeData.Migrations
{
    [DbContext(typeof(DogeDbContext))]
    [Migration("20210429145829_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DogeWorker.DogeDb.TransactionEntity", b =>
                {
                    b.Property<string>("TxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Confirmations")
                        .HasColumnType("bigint");

                    b.Property<string>("InputsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TransferredAmount")
                        .HasColumnType("float");

                    b.Property<string>("TxJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TxTime")
                        .HasColumnType("bigint");

                    b.HasKey("TxId");

                    b.HasIndex("RecipientAddress");

                    b.HasIndex("SenderAddress");

                    b.ToTable("TransactionEntity");
                });

            modelBuilder.Entity("DogeWorker.DogeDb.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("DogeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("DogeAddress");

                    b.HasAlternateKey("Email");

                    b.ToTable("UserEntity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Balance = 0.0,
                            DogeAddress = "A6KAnTjmUdAEnRsg2nTtjEQSKxbEPxdoFq",
                            Email = "A6KA@gmail.com",
                            Username = "A6KA"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Balance = 0.0,
                            DogeAddress = "D5dS4as5e68WE7j9ZWHdNQGiwV1iNAaXTo",
                            Email = "D5dS@gmail.com",
                            Username = "D5dS"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Balance = 0.0,
                            DogeAddress = "D7RwRNSFjzX71aWcGQzhspK6rX695R9wmp",
                            Email = "D7Rw@gmail.com",
                            Username = "D7Rw"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Balance = 0.0,
                            DogeAddress = "DQqeTDPaHMEfbmgS9WcRKh7oLby29Xq3cc",
                            Email = "DQqe@gmail.com",
                            Username = "DQqe"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
